services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    networks:
      - monitoring-network

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    networks:
      - monitoring-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    user: root
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
    ports:
      - 5050:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: always
    logging:
      driver: "none"
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    user: "0"
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - influxdb
      - postgres
    networks:
      - monitoring-network

volumes:
  grafana-storage:
  influxdb-storage:
  db-data:
  pgadmin:

networks:
  monitoring-network:
